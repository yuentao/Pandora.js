/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 86);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(21)('wks');
var uid = __webpack_require__(14);
var Symbol = __webpack_require__(1).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 1 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(7);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 3 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.11' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(17)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 5 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8);
var createDesc = __webpack_require__(19);
module.exports = __webpack_require__(4) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(2);
var IE8_DOM_DEFINE = __webpack_require__(32);
var toPrimitive = __webpack_require__(30);
var dP = Object.defineProperty;

exports.f = __webpack_require__(4) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1);
var hide = __webpack_require__(6);
var has = __webpack_require__(5);
var SRC = __webpack_require__(14)('src');
var $toString = __webpack_require__(53);
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(3).inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(55);
var defined = __webpack_require__(23);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 11 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),
/* 14 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(15);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(38);
var enumBugKeys = __webpack_require__(25);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(8).f;
var has = __webpack_require__(5);
var TAG = __webpack_require__(0)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(3);
var global = __webpack_require__(1);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(13) ? 'pure' : 'global',
  copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(11);
var TAG = __webpack_require__(0)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 23 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(7);
var document = __webpack_require__(1).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 25 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1);
var core = __webpack_require__(3);
var hide = __webpack_require__(6);
var redefine = __webpack_require__(9);
var ctx = __webpack_require__(16);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 27 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(21)('keys');
var uid = __webpack_require__(14);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 29 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(7);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(1).document;
module.exports = document && document.documentElement;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(4) && !__webpack_require__(17)(function () {
  return Object.defineProperty(__webpack_require__(24)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(13);
var $export = __webpack_require__(26);
var redefine = __webpack_require__(9);
var hide = __webpack_require__(6);
var Iterators = __webpack_require__(12);
var $iterCreate = __webpack_require__(59);
var setToStringTag = __webpack_require__(20);
var getPrototypeOf = __webpack_require__(67);
var ITERATOR = __webpack_require__(0)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(15);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(2);
var dPs = __webpack_require__(64);
var enumBugKeys = __webpack_require__(25);
var IE_PROTO = __webpack_require__(28)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(24)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(31).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(38);
var hiddenKeys = __webpack_require__(25).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 37 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(5);
var toIObject = __webpack_require__(10);
var arrayIndexOf = __webpack_require__(50)(false);
var IE_PROTO = __webpack_require__(28)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(16);
var invoke = __webpack_require__(54);
var html = __webpack_require__(31);
var cel = __webpack_require__(24);
var global = __webpack_require__(1);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(11)(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(29);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(23);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(0);


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(22);
var test = {};
test[__webpack_require__(0)('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(9)(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

// MIT License

// Copyright (c) 2014-2020 Pandora.js

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

const templatePolyfill = __webpack_require__(85);
__webpack_require__(46);
__webpack_require__(47);

//å¼å®¹å¤ç&&åºç¡æ¹æ³
(() => {
  //requestAnimationFrame
  if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = (callback) => {
      let currTime = new Date().getTime(),
        timeToCall = Math.max(0, 16 - (currTime - lastTime)),
        id = window.setTimeout(() => {
          callback(currTime + timeToCall);
        }, timeToCall);
      lastTime = currTime + timeToCall;
      return id;
    };

    window.cancelAnimationFrame = (id) => {
      clearTimeout(id);
    };
  }

  //è·åCSSåé
  const getRoot = (name) => {
    return getComputedStyle(document.documentElement).getPropertyValue(
      `--${name}`
    );
  };

  let rootText = "";
  if (!getRoot("alertTheme"))
    rootText += "/*alertèæ¯*/--alertTheme:rgba(0, 0, 0,.45);";
  if (!getRoot("alertBg"))
    rootText += "/*alerté®ç½©*/--alertBg:rgba(0, 0, 0,.45);";
  if (!getRoot("alertFontSize"))
    rootText += "/*alertå­ä½å¤§å°*/--alertFontSize:1rem;";
  if (!getRoot("alertColor")) rootText += "/*alertå­ä½é¢è²*/--alertColor:#fff;";

  if (!getRoot("confirmTheme"))
    rootText += "/*confirmèæ¯*/--confirmTheme:rgb(255, 255, 255);";
  if (!getRoot("confirmBg"))
    rootText += "/*confirmé®ç½©*/--confirmBg:rgba(0, 0, 0,.45);";
  if (!getRoot("confirmBtnBg"))
    rootText += "/*confirmæé®èæ¯*/--confirmBtnBg:rgb(0,0,0);";
  if (!getRoot("confirmFontSize"))
    rootText += "/*confirmå­ä½å¤§å°*/--confirmFontSize:1rem;";
  if (!getRoot("confirmColor"))
    rootText += "/*confirmå­ä½é¢è²*/--confirmColor:#000;";
  if (!getRoot("confirmBtnColor"))
    rootText += "/*confirmæé®å­ä½é¢è²*/--confirmBtnColor:#fff;";

  //CSSæ¯æåº¦å¤æ­
  const style = document.createElement("style"),
    styleText = `/*å¤æ­æ¯å¦æ¯æhover*/@media (any-hover: none){body::before{content: 'unsupport';display:none;}}/*å¤æ­æ¯å¦æ¯æCSSåé*/:root{--CSS:'support';${rootText}}`;
  style.id = "PDStyleChecker";
  style.innerHTML = styleText;
  document.querySelector("head").appendChild(style);

  //ç¾ååçalert
  window.alert = (content) => {
    let mask = document.createElement("div"),
      maskBg = getRoot("alertBg") || "rgba(0, 0, 0,.45);",
      div = document.createElement("div"),
      timeout,
      Theme = getRoot("alertTheme") || "rgba(0, 0, 0,.45);",
      fontSize = getRoot("alertFontSize") || "1rem;",
      color = getRoot("alertColor") || "#fff;";

    mask.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      z-index: 99999;
      width: 100%;
      height: 100%;
      display:flex;
      justify-content:center;
      align-items: flex-end;
      background: ${maskBg};`;

    div.style.cssText = `
      background:${Theme};
      text-align: center;
      color: ${color};
      font-size: ${fontSize};
      padding: 1em 2em;
      line-height: 1.5;
      transition: opacity .4s ease-out;
      margin-bottom:5vh;`;

    div.innerHTML = content;
    mask.appendChild(div);
    document.body.appendChild(mask);

    mask.onclick = () => {
      clearTimeout(timeout);
      document.body.removeChild(mask);
      mask = null;
      div = null;
      timeout = null;
      color = null;
    };

    clearTimeout(timeout);
    timeout = setTimeout(() => {
      div.style.opacity = 0;
      div.addEventListener("transitionend", () => {
        document.body.removeChild(mask);
        mask = null;
        div = null;
        timeout = null;
        color = null;
      });
    }, 800);
    return !1;
  };
  window.confirm = (config) => {
    const { content, confirmText, cancelText, success, fail } = config;
    let mask = document.createElement("div"),
      maskBg = getRoot("confirmBg") || "rgba(0, 0, 0,.45);",
      btnBg = getRoot("confirmBtnBg") || "rgb(0,0,0);",
      div = document.createElement("div"),
      msg = document.createElement("p"),
      Theme = getRoot("confirmTheme") || "rgb(255, 255, 255);",
      fontSize = getRoot("confirmFontSize") || "1rem;",
      color = getRoot("confirmColor") || "#000;",
      btnColor = getRoot("confirmBtnColor") || "#fff;",
      confirm = document.createElement("button"),
      cancel = document.createElement("button");

    mask.style.cssText = `
    position: fixed;
    top: 0;
    left: 0;
    z-index: 99999;
    width: 100%;
    height: 100%;
    display:flex;
    justify-content:center;
    align-items: center;
    background: ${maskBg};`;

    div.style.cssText = `
    background:${Theme};
    text-align: center;
    color: ${color};
    font-size: ${fontSize};
    padding: 1.5em;
    box-shadow: 0 0 10px rgba(0,0,0,.2);`;

    msg.style.cssText = `margin:0`;
    let buttonCSS = `margin: 4em 1em 0 1em;font-size: .8em;appearance: none;background: ${btnBg};color: ${btnColor};border: none;padding: 1em 3em;cursor: pointer;outline: none;`;
    confirm.style.cssText = buttonCSS;
    cancel.style.cssText = buttonCSS;

    msg.innerHTML = content;
    div.appendChild(msg);
    confirm.innerText = confirmText ? confirmText : "ç¡®è®¤";
    cancel.innerText = cancelText ? cancelText : "åæ¶";

    const removeConfirm = () => {
      document.body.removeChild(mask);
    };
    confirm.onclick = () => {
      removeConfirm();
      success && success();
    };
    cancel.onclick = () => {
      removeConfirm();
      fail && fail();
    };

    div.appendChild(confirm);
    div.appendChild(cancel);
    mask.appendChild(div);
    document.body.appendChild(mask);
  };
  //æ¾ç¤ºloadingé®ç½©
  window.showLoading = () => {
    let mask = document.createElement("div");
    let svg = new Image();
    svg.src = "https://b.pandorajs.com/Pandora/src/loader.svg";
    mask.id = "Pd-upload-Mask";
    mask.appendChild(svg);
    document.body.appendChild(mask);
    document.querySelector("#Pd-upload-Mask").style.cssText =
      "width:100%;height:100%;position: fixed;z-index: 99;top: 0;left: 0;background:rgba(0,0,0,.65);display:flex;align-items: center; justify-content: center;";
  };
  window.hideLoading = () => {
    document.body.removeChild(document.querySelector("#Pd-upload-Mask"));
  };
})();
//åç½®æ¹æ³
const PandoraAPI = class {
  constructor(element = "html") {
    this.element = element;
    this.getEle = (ele) => {
      const typeArr = ["[object Window]", "[object HTMLDocument]"];
      if (typeArr.includes(ele + "")) return window;
      if (document.querySelectorAll(ele).length > 1) {
        return document.querySelectorAll(ele);
      } else {
        return document.querySelector(ele);
      }
    };
    this.init = () => {
      const ele = this.getEle(element);
      try {
        ele.eventList = [];
        return ele;
      } catch (err) {
        console.error(`DOMä¸­ä¸å­å¨åç§°ä¸º ${this.element} çåç´ `);
      }
    };
    this.get = this.init();
    //çäº§PandoraId
    this.pid = `PandoraAPI_${new Date().getTime()}`;
    //é»è®¤åæ°èµå¼
    this.extend = (config, options) => {
      if (!options) {
        options = config;
      } else {
        Object.keys(config).forEach((e) => {
          if (typeof options[e] === "undefined") options[e] = config[e];
        });
      }
      return options;
    };
    //éæ©æå®ä¸æ åç´ 
    this.eq = (index) => {
      this.get = this.getEle(element)[index];
      const ele = this.get;
      ele.eventList = [];
      return this;
    };
    //éæ©å­çº§åç´ 
    this.child = (name) => {
      const ele = this.get;
      if (ele.querySelectorAll(name).length > 1) {
        this.get = ele.querySelectorAll(name);
      } else {
        this.get = ele.querySelector(name);
      }
      const children = this.get;
      children.eventList = [];
      return this;
    };
    //éæ©ç¶çº§åç´ 
    this.parent = () => {
      const ele = this.get;
      this.get = ele.parentElement;
      return this;
    };
    //éååç´ é
    this.each = (fn) => {
      const ele = this.get;
      let i = 0;
      for (let a of ele) {
        fn(a, i);
        i++;
      }
      return this;
    };
    //è·åæä¿®æ¹æ ·å¼
    this.css = (name) => {
      const ele = this.get;
      let style = [];
      style = name;
      if (style) {
        if (typeof style === "string") {
          return window.getComputedStyle(ele).getPropertyValue(style);
        } else {
          Object.keys(style).forEach((e) => {
            ele.style[e] = style[e];
          });
        }
      }
      return this;
    };
    //è·åææå¥ææ¬
    this.text = (str) => {
      const ele = this.get;
      if (str) {
        ele.innerText = str;
      } else {
        return ele.innerText;
      }
      return this;
    };
    //è·åææå¥HTML
    this.html = (content) => {
      const ele = this.get;
      if (content) {
        this.empty();
        ele.innerHTML = content;
      } else {
        return ele.innerHTML;
      }
      return this;
    };
    //è·åææå¥å¼
    this.val = (value = null) => {
      const ele = this.get;
      if (value !== null) ele.value = value;
      return ele.value;
    };
    //æå¥åç´ 
    this.prepend = (target) => {
      const ele = this.get;
      const Thetarget = `${target}${ele.innerHTML}`;
      ele.innerHTML = Thetarget;
      return this;
    };
    this.append = (target) => {
      const ele = this.get;
      const Thetarget = `${ele.innerHTML}${target}`;
      ele.innerHTML = Thetarget;
      return this;
    };
    //æ¸ç©ºå®¹å¨
    this.empty = () => {
      const ele = this.get;
      while (ele.firstChild) {
        ele.removeChild(ele.firstChild);
      }
      return this;
    };
    //ç§»é¤åç´ 
    this.remove = () => {
      const ele = this.get;
      ele.parentElement.removeChild(ele);
      return this;
    };
    //æ·»å class
    this.addClass = (name) => {
      const ele = this.get;
      const beforeClass = ele.classList.value;
      if (beforeClass) {
        ele.className = `${beforeClass} ${name.trim()}`;
      } else {
        ele.className = name.trim();
      }
      return this;
    };
    //ç§»é¤class
    this.removeClass = (name) => {
      const ele = this.get;
      const removeThat = (ele) => {
        let beforeClass = ele.classList.value.split(" "),
          afterClass;
        beforeClass.map((cur, idx) => {
          if (cur === name) beforeClass.splice(idx, 1);
        });
        afterClass = beforeClass.join(" ");
        ele.className = afterClass;
      };
      if (ele.length) {
        for (let e of ele) removeThat(e);
      } else {
        removeThat(ele);
      }
      return this;
    };
    //æ¯å¦æ¥æclasså
    this.hasClass = (name) => {
      const ele = this.get;
      const classlist = ele.classList.value.split(" ");
      if (classlist.indexOf(name) > 0) {
        return !0;
      } else {
        return !1;
      }
    };
    //æ·»å å±æ§
    this.attr = (name, val = null) => {
      const ele = this.get;
      if (val) {
        ele.setAttribute(name, val);
        return this;
      } else {
        return ele.getAttribute(name);
      }
    };
    //ç§»é¤å±æ§
    this.removeAttr = (name) => {
      const ele = this.get;
      ele.removeAttribute(name);
      return this;
    };
    //ç»å®äºä»¶
    this.bind = (eventName, fn, bool = !1) => {
      const ele = this.get;
      ele.addEventListener(eventName, fn, bool);
      ele.eventList.push({ name: eventName, callback: fn });
      return this;
    };
    //è§£ç»äºä»¶
    this.unbind = (eventName) => {
      const ele = this.get;
      ele.eventList.map((e, i) => {
        if (e.name === eventName) {
          ele.removeEventListener(eventName, e.callback);
          ele.eventList.splice(i, 1);
        }
      });
      return this;
    };
    //æ·»å äºä»¶
    this.addEvent = (eventName, fn) => {
      const ele = this.get;
      const addEvent = (ele, index = null) => {
        ele[eventName] = (e) => {
          let event = e;
          event.current = ele;
          fn(event, index);
        };
      };
      if (ele.length) {
        let index = 0;
        for (let e of ele) {
          addEvent(e, index);
          index++;
        }
      } else {
        addEvent(ele);
      }
    };
    //ç¹å»äºä»¶
    this.click = (fn) => {
      this.addEvent("onclick", fn);
      return this;
    };
    //é¿æäºä»¶
    this.taping = (fn) => {
      const ele = this.get;
      try {
        window.ontouchstart;
      } catch (err) {
        ele.onclick = fn;
        return this;
      }
      let infiniteFrame;
      const infiniteFn = () => {
        fn();
        infiniteFrame = requestAnimationFrame(infiniteFn);
      };
      ele.ontouchstart = () => {
        event.preventDefault();
        cancelAnimationFrame(infiniteFn);
        infiniteFn();
      };
      ele.ontouchend = () => {
        cancelAnimationFrame(infiniteFrame);
        return this;
      };
    };
    //å¤±ç¦äºä»¶
    this.blur = (fn) => {
      const ele = this.get;
      ele.onblur = fn;
      return this;
    };
    //èç¦äºä»¶
    this.focus = (fn) => {
      this.addEvent("onfocus", fn);
      return this;
    };
    //æ¹åäºä»¶
    this.change = (fn) => {
      this.addEvent("onchange", fn);
      return this;
    };
    //è¾å¥äºä»¶
    this.input = (fn) => {
      this.addEvent("oninput", fn);
      return this;
    };
    //æ¬æµ®äºä»¶
    this.hover = (In, Out) => {
      const ele = this.get;
      ele.onmouseover = In;
      Out && (ele.onmouseout = Out);
      return this;
    };
    //æ»å¨äºä»¶
    this.scroll = (fn) => {
      const ele = this.get;
      ele.onscroll = fn;
      return this;
    };
    //è¿æ¸¡ç»æäºä»¶
    this.ontransition = (fn) => {
      const ele = this.get;
      try {
        window.ontransitionend;
      } catch (err) {
        return !1;
      }
      ele.addEventListener("transitionend", fn);
      return this;
    };
    //å¨ç»ç»æäºä»¶
    this.animated = (fn) => {
      const ele = this.get;
      let isAnimated = !1;
      ele.addEventListener("animationend", () => {
        if (!isAnimated) {
          isAnimated = !0;
          fn();
        }
      });
      return this;
    };
    //æ¾ç¤º
    this.show = (callback = null) => {
      if (this.attr("beforeHide")) {
        this.css({ display: this.attr("beforeHide") });
      } else {
        this.css({ display: "block" });
      }
      callback && setTimeout(callback, 0);
      return this;
    };
    //éè
    this.hide = (callback = null) => {
      if (!this.attr("beforeHide"))
        this.attr("beforeHide", this.css("display"));
      this.css({ display: "none" });
      callback && setTimeout(callback, 0);
      return this;
    };
    //ajax
    this.ajax = (options) => {
      let config = {
        //æ¥å£å°å(ç±»åï¼å­ç¬¦ä¸²)
        url: null,
        //è¯·æ±ç±»å(ç±»åï¼å­ç¬¦ä¸²ï¼å¯éåæ°ï¼postãget)
        type: "get",
        //æ¯å¦åæ­¥è¯·æ±(ç±»åï¼å¸å°)
        async: !1,
        //åéæ°æ®ç±»å(ç±»åï¼å­ç¬¦ä¸²ï¼å¯éåæ°ï¼jsonãform)
        dataType: "json",
        //åéæ°æ®(ç±»åï¼jsonæformï¼æ ¼å¼å¿é¡»ååéæ°æ®ç±»åä¿æä¸è´)
        data: null,
        //æååè°æ¹æ³(ç±»åï¼æ¹æ³ï¼è¿åç±»åï¼å¯¹è±¡)
        success: null,
        //å¤±è´¥åè°æ¹æ³(ç±»åï¼æ¹æ³)
        error: null,
      };
      config = this.extend(config, options);
      const http = new XMLHttpRequest();
      let params;
      if (config.dataType == "json") {
        if (config.data)
          params = Object.keys(config.data)
            .map((key) => {
              return `${encodeURIComponent(key)}=${encodeURIComponent(
                config.data[key]
              )}`;
            })
            .join("&");
      } else {
        params = config.data;
      }

      http.onload = () => {
        if (
          http.status === 200 ||
          http.statusText === "OK" ||
          http.readyState === 4
        ) {
          const res = http.response;
          try {
            JSON.parse(res);
          } catch (err) {
            config.success && config.success(res);
            return !1;
          }
          config.success && config.success(JSON.parse(res));
        }
      };
      http.onerror = config.error ? config.error : null;
      http.open(config.type.toUpperCase(), config.url, config.async);
      if (config.dataType == "json")
        http.setRequestHeader(
          "Content-type",
          "application/x-www-form-urlencoded"
        );
      http.send(params);
    };
    //fetch
    this.fetch = (options) => {
      let config = {
        //æ¥å£å°å(ç±»åï¼å­ç¬¦ä¸²)
        url: null,
        //è¯·æ±ç±»å(ç±»åï¼å­ç¬¦ä¸²ï¼å¯éåæ°ï¼postãgetãput)
        type: "get",
        //åéæ°æ®ç±»å(ç±»åï¼å­ç¬¦ä¸²ï¼å¯éåæ°ï¼jsonãform)
        dataType: "json",
        //åéæ°æ®(ç±»åï¼JSONæFormDataï¼æ ¼å¼å¿é¡»åè¯·æ±ç±»åç¸å¯¹åº)
        data: null,
        //æååè°æ¹æ³(ç±»åï¼æ¹æ³ï¼è¿åç±»åï¼å¯¹è±¡)
        success: null,
        //å¤±è´¥åè°æ¹æ³(ç±»åï¼æ¹æ³)
        error: null,
      };
      config = this.extend(config, options);
      let params;
      if (config.dataType == "json") {
        config.data && (params = JSON.stringify(config.data));
      } else {
        params = config.data;
      }

      fetch(config.url, {
        body: params,
        method: config.type.toLocaleUpperCase(),
      })
        .then((res) => {
          if (res.ok) return res.json();
        })
        .then((success) => {
          config.success && config.success(success);
        })
        .catch((error) => {
          config.error && config.error(error);
        });
    };
    //å¨å±åé
    this.globalData = {};
    //è®¾ç½®å¨å±åé
    this.setData = (obj) => {
      return new Promise((success, fail) => {
        try {
          for (let key in obj) this.globalData[key] = obj[key];
          success();
        } catch (err) {
          fail(err);
        }
      });
    };
    //æ¨¡æ¿æ¸²æ
    this.template = (route, container) => {
      return new Promise((success, fail) => {
        const temp = (() => {
          let cur;
          let temp = document.querySelectorAll("template");
          for (let a = 0; a < temp.length; a++) {
            if (temp[a].getAttribute("route") == route) cur = temp[a];
          }
          return cur;
        })();

        if (temp) {
          this.empty();
          container.appendChild(document.importNode(temp.content, !0));
          success();
        } else {
          console.error(`ä¸å­å¨ä»¥ä¸æ¨¡æ¿åï¼${route}`);
          fail();
        }
      });
    };
  }
};
//æå±æ¹æ³
const PandoraJs = (SuperClass = null) => {
  SuperClass = SuperClass || class Empty {};
  return class extends SuperClass {
    constructor(element) {
      super(element);
    }
    //Mustacheæ¸²æ
    Mush(options) {
      let config = {
        //æ¸²ææ°æ®(ç±»åï¼å¯¹è±¡)
        data: null,
        //äºä»¶ç»å®(ç±»åï¼æ¹æ³)
        Bind: null,
        //çå½å¨æ-é¦æ¬¡æ¸²æå®æ(ç±»åï¼æ¹æ³ï¼è¿åå½åæ¸²ææ°æ®)
        Init: null,
        // çå½å¨æ-æ´æ°æ¸²æå®æ(ç±»åï¼æ¹æ³)
        Updata: null,
      };
      config = this.extend(config, options);
      let Html = this.html(),
        bHtml = Html,
        pattern = new RegExp("{{.*?}}", "g"),
        patterns = new RegExp("{{.*?}}"),
        matchValue;

      const result = () => {
        let r = [];
        Html.match(pattern).forEach((e, index) => {
          r[index] = e.split("{{")[1].split("}}")[0];
        });
        return r;
      };
      matchValue = result();

      //æ¸²æhtml
      const renderHtml = () => {
        return new Promise((next) => {
          Html = bHtml;
          for (let value of matchValue) {
            for (let keyName in config.data)
              value === keyName &&
                (Html = Html.replace(
                  patterns,
                  config.data[value] ? config.data[value] : ""
                ));
          }
          this.html(Html);
          config.Bind && eval(config.Bind);
          next();
        });
      };

      //éååéæ¯å¦è¢«å¨æä¿®æ¹
      const unique = (array) => {
        let r = [];
        for (let i = 0, l = array.length; i < l; i++) {
          for (let j = i + 1; j < l; j++) array[i] == array[j] && j == ++i;
          r.push(array[i]);
        }
        return r;
      };

      const realVal = unique(matchValue);

      realVal.forEach((e) => {
        Object.defineProperty(this.globalData, e, {
          set: (value) => {
            config.data[e] = value;
            renderHtml();
            config.Updata && config.Updata();
          },
          get: () => {
            return config.data[e];
          },
        });
      });

      renderHtml();
      config.Init && config.Init(this.globalData);
      return this;
    }
    //éæè·¯ç±
    Router(options) {
      let config = {
        // è·¯ç±è·¯å¾éå(ç±»åï¼æ°ç»)
        routes: null,
      };
      config = this.extend(config, options);
      const that = this;
      templatePolyfill();

      // éåè·¯ç±è·¯å¾
      const eachRoutes = (path) => {
        return new Promise((success, fail) => {
          if (config.routes && path) {
            if (JSON.stringify(config.routes).indexOf(path) < 0) {
              fail("è·¯å¾éè¯¯");
            } else {
              config.routes.forEach((e) => {
                if (path == e.path) {
                  that
                    .template(path, that.get)
                    .then(() => {
                      e.callback && e.callback();
                      success();
                    })
                    .catch(() => {
                      e.error && e.error();
                    });
                }
              });
            }
          }
        });
      };

      // HASHæ¹å
      const hashChange = () => {
        const routePath =
          location.hash.indexOf("/") > -1 ? location.hash.split("#")[1] : !1;
        if (routePath) {          
          eachRoutes(routePath);
        } else {
          eachRoutes("/");
        }
      };

      // è·¯ç±å¯¼èª
      this.navigateTo = (path) => {
        return new Promise((success, fail = null) => {
          eachRoutes(path)
            .then(() => {
              window.location.href = `#${path}`;
              success();
            })
            .catch(() => {
              console.error("è·¯ç±å°åä¸å­å¨äºroutesï¼");
              fail && fail();
            });
        });
      };

      window.onload = hashChange;
      window.onhashchange = hashChange;
      return this;
    }
    //è½®æ­åæ¢
    Switcher(options) {
      let config = {
        //è¿æ¸¡éåº¦/ç§(ç±»åï¼æ°å­)
        Speed: 1,
        //å¨ç»æ²çº¿(ç±»åï¼å­ç¬¦ä¸²ï¼åècss3å¨ç»æ²çº¿)
        Curve: "ease",
        //åæ¢ææ(ç±»åï¼å­ç¬¦ä¸²ï¼å¯éåæ°ï¼sliderãfade)
        Effect: "slider",
        //æ¹å(ç±»åï¼å­ç¬¦ä¸²ï¼å¯éåæ°ï¼horizontalãvertical)
        Direction: "horizontal",
        //æ¯æ§åå¼¹(ç±»åï¼å¸å°)
        Inertia: true,
        //æ»å¨æ¯ä¾(ç±»åï¼æ°å­)
        Distance: 3,
        //èªå¨åæ¢é´é/ç§(ç±»åï¼æ°å­ï¼ä¸º0æ¶ä¸èªå¨åæ¢)
        AutoSpeed: 0,
        //åé¡µå¨(ç±»åï¼å¸å°)
        Pagination: !1,
        //æ¬æµ®åæ­¢(ç±»åï¼å¸å°)
        Hover: !1,
        //æ»è½®æ»å¨(ç±»åï¼å¸å°)
        Scroll: !1,
        //åå§åæ (ç±»åï¼æ°å­)
        InitPage: 0,
        //å¾ªç¯(ç±»åï¼å¸å°)
        Loop: !1,
        //åæ¢ç¶æåå(ç±»åï¼æ¹æ³)
        onChange: null,
      };
      const that = this;
      config = that.extend(config, options);
      const childEle = this.get,
        parentEle = childEle[0].parentElement;
      let childW = childEle[0].offsetWidth,
        childH = childEle[0].offsetHeight,
        cur = config.InitPage,
        AutoTimeout,
        isScrolling = !1;
      const total = childEle.length,
        transitionend = () => {
          if (isScrolling) {
            isScrolling = !1;
            parentEle.removeEventListener("transitionend", transitionend);
          }
        };

      //åæ¢
      const Swiper = (moveTo = null) => {
        moveTo && (cur = moveTo);
        Pagination(cur);
        config.onChange && config.onChange(cur);
        switch (config.Effect) {
          case "fade":
            for (let cur of childEle) cur.style.opacity = 0;
            childEle[cur].style.opacity = 1;
            break;
          default:
            switch (config.Direction) {
              case "horizontal":
                parentEle.style.transform = `translate3d(${
                  -1 * (childW * cur)
                }px,0,0)`;
                break;
              case "vertical":
                parentEle.style.transform = `translate3d(0,${
                  -1 * (childH * cur)
                }px,0)`;
                break;
            }
            break;
        }
        if (config.Loop) {
          parentEle.addEventListener("transitionend", transitionend);
        } else {
          if (cur === 0 || cur === total - 1) {
            transitionend();
          } else {
            parentEle.addEventListener("transitionend", transitionend);
          }
        }
      };

      //åé¡µå¨
      const Pagination = (current) => {
        for (let e of childEle)
          e.className = e.className.replace("active", "").trim();
        if (childEle[cur].className) {
          childEle[cur].className += " active";
        } else {
          childEle[cur].className += "active";
        }
        if (config.Pagination) {
          parentEle.parentElement.querySelector(".Pd-pagination") &&
            parentEle.parentElement.removeChild(
              parentEle.parentElement.querySelector(".Pd-pagination")
            );
          let pager = document.createElement("div");
          pager.className = "Pd-pagination";

          for (let a = 0; a < total; a++) {
            let pageChild = document.createElement("a"),
              textNode = childEle[a].getAttribute("data-title")
                ? document.createTextNode(
                    childEle[a].getAttribute("data-title")
                  )
                : document.createTextNode(a);
            pageChild.setAttribute("href", "javascript:void 0");
            if (a === current) pageChild.className = "active";
            pageChild.appendChild(textNode);
            pager.appendChild(pageChild);
          }
          parentEle.parentElement.insertBefore(
            pager,
            parentEle.nextElementSibling
          );
          for (
            let a = 0;
            a <
            parentEle.parentElement
              .querySelector(".Pd-pagination")
              .querySelectorAll("a").length;
            a++
          ) {
            let e = parentEle.parentElement
              .querySelector(".Pd-pagination")
              .querySelectorAll("a")[a];
            let idx = a;
            e.onclick = () => {
              cur = idx;
              Swiper();
            };
          }
        }
      };

      //ä¸ä¸ä¸ª
      const Prev = () => {
        if (cur < total && cur > 0) {
          cur--;
        } else if (cur === 0 && config.Loop) {
          cur = total - 1;
        } else {
          isScrolling = !1;
        }
        Swiper();
      };

      //ä¸ä¸ä¸ª
      const Next = () => {
        if (cur < total - 1) {
          cur++;
        } else if (cur === total - 1 && config.Loop) {
          cur = 0;
        } else {
          cur = total - 1;
        }
        Swiper();
      };

      this.prev = Prev;
      this.next = Next;
      this.direct = Swiper;

      let startX, startY, endX, endY, curX, curY;
      //æ¹æ³ï¼æ»å¨å¼å§
      const touchStart = (event) => {
        if (
          event.target.getAttribute("data-cancel") ||
          event.target.tagName.toUpperCase() == "A"
        )
          return !1;
        event.preventDefault();
        clearTimeout(AutoTimeout);
        cancelAnimationFrame(AutoPlayFrame);
        let { pageX, pageY } = event.changedTouches[0];
        let { left, top } = parentEle.parentElement.getBoundingClientRect();
        switch (config.Direction) {
          case "horizontal":
            startX = pageX - left;
            break;
          case "vertical":
            startY = pageY - top;
            break;
        }
        parentEle.style.transition = null;
      };

      //æ¹æ³ï¼æ»å¨ä¸­
      const touchMove = (event) => {
        if (
          event.target.getAttribute("data-cancel") ||
          event.target.tagName.toUpperCase() == "A"
        )
          return !1;
        let { pageX, pageY } = event.changedTouches[0];
        let { left, top } = parentEle.parentElement.getBoundingClientRect();
        curX = pageX - left;
        curY = pageY - top;
        switch (config.Effect) {
          case "fade":
            for (let cur of childEle)
              cur.style.transition = `opacity ${config.Speed}s linear`;
            break;
          default:
            switch (config.Direction) {
              case "horizontal":
                if (startX > curX) {
                  parentEle.style.transform = `translate3d(${
                    -1 * (startX - curX + childW * cur)
                  }px,0,0)`;
                } else {
                  parentEle.style.transform = `translate3d(${
                    -1 * (childW * cur) + Math.abs(curX - startX)
                  }px,0,0)`;
                }
                break;
              case "vertical":
                if (startY > curY) {
                  if (cur != total - 1)
                    parentEle.style.transform = `translate3d(0,${
                      -1 * (startY - curY + childH * cur)
                    }px,0)`;
                } else {
                  if (cur != 0)
                    parentEle.style.transform = `translate3d(0,${
                      -1 * (childH * cur) + Math.abs(curY - startY)
                    }px,0)`;
                }
                break;
            }
            break;
        }
      };

      //æ¹æ³ï¼æ»å¨ç»æ
      const touchEnd = (event) => {
        if (
          event.target.getAttribute("data-cancel") ||
          event.target.tagName.toUpperCase() == "A"
        )
          return !1;
        clearTimeout(AutoTimeout);
        AutoPlay();
        parentEle.style.transition = `transform ${config.Speed}s ${config.Curve}`;
        let { pageX, pageY } = event.changedTouches[0];
        let { left, top } = parentEle.parentElement.getBoundingClientRect();
        switch (config.Direction) {
          case "horizontal":
            endX = pageX - left;
            switch (config.Effect) {
              case "fade":
                if (
                  startX - endX > childW / config.Distance &&
                  cur === total - 1
                ) {
                  cur = 0;
                } else if (
                  startX - endX > childW / config.Distance &&
                  cur < total - 1
                ) {
                  Next();
                } else if (endX - startX > childW / config.Distance) {
                  Prev();
                }
                for (let cur of childEle) {
                  cur.style.transition = `opacity ${config.Speed}s ${config.Curve}`;
                  cur.style.opacity = 0;
                }
                childEle[cur].style.opacity = 1;
                Swiper();
                break;
              default:
                if (startX - endX > childW / config.Distance && cur < total - 1)
                  Next();
                if (endX - startX > childW / config.Distance) Prev();
                parentEle.style.transform = `translate3d(${
                  -1 * (childW * cur)
                }px,0,0)`;
                break;
            }
            break;
          case "vertical":
            endY = pageY - top;
            switch (config.Effect) {
              case "fade":
                if (
                  startY - endY > childH / config.Distance &&
                  cur === total - 1
                ) {
                  cur = 0;
                } else if (
                  startY - endY > childH / config.Distance &&
                  cur < total - 1
                ) {
                  Next();
                } else if (endY - startY > childH / config.Distance) {
                  Prev();
                }
                for (let cur of childEle) {
                  cur.style.transition = `opacity ${config.Speed}s ${config.Curve}`;
                  cur.style.opacity = 0;
                }
                childEle[cur].style.opacity = 1;
                Swiper();
                break;
              default:
                if (startY - endY > childH / config.Distance && cur < total - 1)
                  Next();
                if (endY - startY > childH / config.Distance) Prev();
                parentEle.style.transform = `translate3d(0,${
                  -1 * (childH * cur)
                }px,0)`;
                break;
            }
            break;
        }
      };

      //æ¹æ³ï¼æ»å¨ä¸­
      const scrollMove = (event) => {
        event.preventDefault();
        if (event.deltaY > 20 && !isScrolling) {
          isScrolling = !0;
          Next();
        }
        if (event.deltaY < -20 && !isScrolling) {
          isScrolling = !0;
          Prev();
        }
      };

      //èªå¨æ­æ¾
      let AutoPlayFrame;
      const AutoPlay = () => {
        if (config.AutoSpeed > 0) {
          AutoTimeout = setTimeout(() => {
            Next();
            clearTimeout(AutoTimeout);
            AutoPlayFrame = requestAnimationFrame(AutoPlay);
          }, config.AutoSpeed * 1000);
        }
      };

      //åå§å
      const Init = () => {
        let { offsetWidth, offsetHeight } = childEle[0];
        childW = offsetWidth;
        childH = offsetHeight;
        cur = config.InitPage;

        new Promise((next) => {
          switch (config.Effect) {
            case "fade":
              for (let cur of childEle) {
                cur.style.transition = `opacity ${config.Speed}s ${config.Curve}`;
                cur.style.position = "absolute";
              }
              break;
            default:
              switch (config.Direction) {
                case "horizontal":
                  parentEle.style.flexDirection = "row";
                  parentEle.style.width = `${childW * total}px`;
                  break;
                case "vertical":
                  parentEle.style.flexDirection = "column";
                  parentEle.style.height = `${childH * total}px`;
                  break;
              }
              parentEle.style.display = "flex";
              parentEle.style.transition = `transform ${config.Speed}s ${config.Curve}`;
              break;
          }
          next();
        })
          .then(() => {
            return new Promise((next) => {
              //ç§»é¤äºä»¶
              Swiper(config.InitPage);
              AutoPlay();
              config.Inertia &&
                parentEle.removeEventListener("touchmove", touchMove);
              config.Scroll &&
                parentEle.removeEventListener("mousewheel", scrollMove);
              parentEle.removeEventListener("touchstart", touchStart);
              parentEle.removeEventListener("touchend", touchEnd);
              next();
            });
          })
          .then(() => {
            //æ·»å äºä»¶
            config.Inertia &&
              parentEle.addEventListener("touchmove", touchMove);
            config.Scroll &&
              parentEle.addEventListener("mousewheel", scrollMove);
            parentEle.addEventListener("touchstart", touchStart);
            parentEle.addEventListener("touchend", touchEnd);
            if (config.Hover) {
              parentEle.addEventListener("mouseover", () => {
                clearTimeout(AutoTimeout);
                cancelAnimationFrame(AutoPlayFrame);
              });
              parentEle.addEventListener("mouseout", AutoPlay);
            }
          });
      };

      Init();
      let req;
      window.addEventListener("resize", () => {
        cancelAnimationFrame(req);
        req = requestAnimationFrame(Init);
      });
      return this;
    }
    //å­ä½èªéåº
    AutoSize(options) {
      let config = {
        //åºå®å°ºå¯¸(ç±»åï¼å­ç¬¦ä¸²)
        PageSize: "device-width",
        //åå§ç¼©æ¾(ç±»åï¼æ°å­)
        InitScale: 1,
        //æå°ç¼©æ¾(ç±»åï¼æ°å­)
        MinScale: 1,
        //æå¤§ç¼©æ¾(ç±»åï¼æ°å­)
        MaxScale: 1,
        //DPIç¼©æ¾(ç±»åï¼æ°å­)
        Ratio: 1,
      };
      config = this.extend(config, options);
      const meta = document.createElement("meta");
      meta.setAttribute("name", "viewport");
      if (typeof config.PageSize !== "number") {
        meta.setAttribute(
          "content",
          `width=${config.PageSize},initial-scale=${config.InitScale},minimum-scale=${config.MinScale},maximum-scale=${config.MaxScale},user-scalable=no,viewport-fit=cover`
        );
      } else {
        meta.setAttribute(
          "content",
          `width=${config.PageSize},user-scalable=no,viewport-fit=cover`
        );
      }
      new PandoraAPI("head").get.appendChild(meta);

      const SetSize = () => {
        let platform = navigator.userAgent.toLowerCase(),
          deviceList = ["iphone", "android"],
          isMobile = !1;

        deviceList.forEach((c) => {
          if (isMobile) return !1;
          if (platform.indexOf(c) > 0 && config.PageSize !== "device-width") {
            isMobile = !0;
            let calcFontSize = (window.screen.width / 3.75) * config.Ratio;
            this.css({ "font-size": `${calcFontSize}px` });
          } else {
            isMobile = !1;
            this.css({ "font-size": this.css("font-size") });
          }
          this.attr("ismobile", isMobile);
        });
      };
      SetSize();
      window.onresize = SetSize;
      return this;
    }
    //èªå®ä¹å¼¹æ¡
    Dialog(options) {
      let config = {
        //æ¯å¦æ¾ç¤ºé®ç½©
        mask: !0,
        //é®ç½©é¢è²(ç±»åï¼å­ç¬¦ä¸²)
        maskColor: "rgba(0,0,0,.85)",
        //ç¹å»é®ç½©éåº(ç±»åï¼å¸å°)
        maskOut: !0,
        //è¿æ¸¡éåº¦/æ¯«ç§(ç±»åï¼æ°å­)
        Speed: 180,
        //è¿æ¸¡æ²çº¿(ç±»åï¼å­ç¬¦ä¸²ï¼åèCSS3å¯ç¨æ²çº¿)
        Curve: "ease-out",
        //è¿åºæ¹å¼(ç±»åï¼å­ç¬¦ä¸²ï¼none:æ ãzoom:ç¼©æ¾ãtop:ä»å±å¹ä¸æ¹åºç°ãbottom:ä»å±å¹ä¸æ¹åºç°)
        Direction: "zoom",
        //è¿å¥äºä»¶(ç±»åï¼æ¹æ³)
        In: null,
        //éåºäºä»¶(ç±»åï¼æ¹æ³)
        Out: null,
        //ç¡®è®¤äºä»¶
        Confirm: {
          //ç¡®å®æé®(ç±»åï¼å­ç¬¦ä¸²)
          btn: null,
          //åè°(ç±»åï¼æ¹æ³ï¼è¿åç±»åï¼å¯¹è±¡)
          callback: null,
        },
        //åæ¶äºä»¶
        Cancel: {
          //åæ¶æé®(ç±»åï¼å­ç¬¦ä¸²)
          btn: null,
          //åè°(ç±»åï¼æ¹æ³ï¼è¿åç±»åï¼å¯¹è±¡)
          callback: null,
        },
      };
      config = this.extend(config, options);
      let mask = document.createElement("div"),
        parent = this.get.parentElement;
      mask.className = "Pd-Mask";
      const confirmBtn = config.Confirm.btn
          ? new PandoraAPI(config.Confirm.btn)
          : null,
        cancelBtn = config.Cancel.btn
          ? new PandoraAPI(config.Cancel.btn)
          : null;

      if (config.Direction !== "none")
        this.css({ transition: `all ${config.Speed}ms ${config.Curve}` });

      //å³é­å¼¹æ¡
      const closeDialog = () => {
        Effect("out");
        if (config.Direction === "none") {
          config.mask && parent.removeChild(mask);
          this.css({ display: "none" });
          this.unbind("transitionend");
        } else {
          this.bind("transitionend", () => {
            config.mask && parent.removeChild(mask);
            this.css({ display: "none" });
            this.unbind("transitionend");
          });
        }
        config.Confirm.btn && confirmBtn.unbind("click");
        config.Cancel.btn && cancelBtn.unbind("click");
        window.onresize = null;
      };

      //è¿å¥åéåºææ
      const Effect = (where) => {
        if (config.mask) {
          parent.insertBefore(mask, this.get.nextElementSibling);
          new PandoraAPI(".Pd-Mask").css({
            width: "100vw",
            height: "100vh",
            background: config.maskColor,
            position: "fixed",
            top: 0,
            left: 0,
            "z-index": 998,
          });
        }

        switch (where) {
          case "in":
            this.css({ display: "block" });
            switch (config.Direction) {
              case "zoom":
                this.css({ transform: "translate3d(0,0,0) scale(0)" });
                break;
              case "top":
                this.css({ transform: "translate3d(0,-100%,0)" });
                break;
              case "bottom":
                this.css({ transform: "translate3d(0,100%,0)" });
                break;
            }
            config.In && config.In();
            break;
          case "out":
            switch (config.Direction) {
              case "none":
                this.css({ display: "none" });
                break;
              case "zoom":
                this.css({ transform: "translate3d(0,0,0) scale(0)" });
                break;
              case "top":
                this.css({ transform: "translate3d(0,-100%,0)" });
                break;
              case "bottom":
                this.css({ transform: "translate3d(0,100%,0)" });
                break;
            }
            config.Out && config.Out();
            break;
        }
      };

      const openDialog = (param) => {
        new Promise((next) => {
          Effect("in");
          next();
        })
          .then(() => {
            return new Promise((next) => {
              const calcDialog = () => {
                let top = parseInt(this.css("height")) / 2,
                  left = parseInt(this.css("width")) / 2;
                switch (config.Direction) {
                  case "none":
                    this.css({
                      position: "fixed",
                      top: `calc(50% - ${top}px)`,
                      left: `calc(50% - ${left}px)`,
                      "z-index": 999,
                      transform: "translate3d(0,0,0) scale(1)",
                    });
                    break;
                  case "zoom":
                    this.css({
                      position: "fixed",
                      top: `calc(50% - ${top}px)`,
                      left: `calc(50% - ${left}px)`,
                      "z-index": 999,
                      transform: "translate3d(0,0,0) scale(1)",
                    });
                    break;
                  case "top":
                    this.css({
                      position: "fixed",
                      top: 0,
                      left: `calc(50% - ${left}px)`,
                      "z-index": 999,
                      transform: "translate3d(0,0,0) scale(1)",
                    });
                    break;
                  case "bottom":
                    this.css({
                      position: "fixed",
                      bottom: 0,
                      left: `calc(50% - ${left}px)`,
                      "z-index": 999,
                      transform: "translate3d(0,0,0) scale(1)",
                    });
                    break;
                }
              };
              calcDialog();
              window.onresize = () => {
                this.ontransition(calcDialog);
              };
              next();
            });
          })
          .then(() => {
            //é®ç½©è¢«ç¹å»
            if (config.mask && config.maskOut) mask.onclick = closeDialog;
            const { close } = this;
            //ç¡®è®¤æé®è¢«ç¹å»
            config.Confirm.btn &&
              confirmBtn.bind("click", () => {
                config.Confirm.callback({ param: param ? param : null, close });
              });
            //åæ¶æé®è¢«ç¹å»
            config.Cancel.btn &&
              cancelBtn.bind("click", () => {
                config.Cancel.callback({ param: param ? param : null, close });
              });
          });
      };

      this.close = closeDialog;
      this.open = openDialog;
      return this;
    }
    //å¾çé¢å è½½
    ImgLoader(options) {
      let config = {
        //ç¼æ­¥(ç±»åï¼å¸å°)
        lazy: !0,
        //å è½½ä¸­(ç±»åï¼æ¹æ³ï¼è¿åç±»åï¼æ°å­)
        loading: null,
        //å è½½å®æ(ç±»åï¼æ¹æ³)
        callback: null,
        //å è½½éè¯¯(ç±»åï¼æ¹æ³)
        error: () => {
          console.error("èµæºå è½½éè¯¯");
          alert("èµæºå è½½éè¯¯");
        },
      };
      config = this.extend(config, options);
      const $ = this.getEle("*"),
        pattern = new RegExp('".*?"', "g"),
        pattern2 = new RegExp(/'.*?'/, "g"),
        pattern3 = new RegExp(/\(.*?\)/, "g");
      let ImgArr = [],
        total = 0,
        cur = 0,
        step = 0,
        floatNum = 0;

      for (let e of $) {
        if (e.nodeName.toLowerCase() == "img") e.src && ImgArr.push(e.src);
        const getBg = window
          .getComputedStyle(e)
          .getPropertyValue("background-image");
        if (getBg.indexOf("url") > -1 && getBg != "none") {
          const url1 = getBg.match(pattern),
            url2 = getBg.match(pattern2),
            url3 = getBg.match(pattern3);

          if (url1) ImgArr.push(url1[0].toString().replace(/"/g, ""));
          if (url2) ImgArr.push(url2[0].toString().replace(/'/g, ""));
          if (url3) {
            let src = url3[0].toString().replace(/\(/, "");
            src = src.replace(/\)/, "");
            if (src.match(pattern))
              src = src.match(pattern)[0].toString().replace(/"/g, "");
            if (src.match(pattern2))
              src = src.match(pattern2)[0].toString().replace(/'/g, "");
            ImgArr.push(src);
          }
        }
      }

      let loaderList = [];
      total = ImgArr.length;

      const loader = (src) => {
        return new Promise((success, fail) => {
          let img = new Image();
          img.src = src;

          img.onerror = fail;

          if (img.complete) {
            cur++;
            success();
          } else {
            img.onload = () => {
              cur++;
              success();
            };
          }
        });
      };

      ImgArr.map((e) => {
        loaderList.push(loader(e));
      });

      //å è½½ä¸­
      let loadingFrame, loadstepFrame;

      Promise.all(loaderList)
        .then(() => {
          !config.lazy && config.callback && config.callback();
        })
        .catch(() => {
          config.error();
          cancelAnimationFrame(loadingFrame);
          cancelAnimationFrame(loadstepFrame);
        });

      const loading = () => {
        step = (cur / total) * 100;
        if (step < 100) {
          if (step === 100) {
            cancelAnimationFrame(loadingFrame);
          } else {
            loadingFrame = requestAnimationFrame(loading);
          }
        }
      };
      const loadstep = () => {
        if (floatNum < 100) {
          if (floatNum < step) floatNum++;
          this.attr("Pd-load", floatNum);
          config.loading && config.loading(floatNum);
          if (floatNum === 100) {
            cancelAnimationFrame(loadstepFrame);
            config.lazy && config.callback && config.callback();
          } else {
            loadstepFrame = requestAnimationFrame(loadstep);
          }
        }
      };
      loading();
      loadstep();
      return this;
    }
    //å¾çä¸ä¼ 
    ImgUpload(options) {
      let config = {
        //æ¥å£å°å(ç±»åï¼å­ç¬¦ä¸²)
        apiUrl: "//node.pandorastudio.cn/",
        //æ¥å£åç§°(ç±»åï¼å­ç¬¦ä¸²)
        apiName: "Pd_uploadImage",
        //æ ¼å¼éå¶(ç±»åï¼å­ç¬¦ä¸²)
        Format: "*",
        //éæ©ç±»å(å¯éåæ°ï¼defualtãcamera)
        type: "default",
        //éå¶æ°é(ç±»åï¼æ°å­)
        Max: 1,
        //åç¼©æ¯ä¾(ç±»åï¼æ°å­)
        Quality: 100,
        //å°ºå¯¸è£å
        Clip: {
          //å®½åº¦(ç±»åï¼æ°å­)
          width: null,
          //é«åº¦(ç±»åï¼æ°å­)
          height: null,
        },
        //ä¸ä¼ äºä»¶
        Events: {
          //è¶è¿éå¶(ç±»åï¼æ¹æ³)
          overMax: null,
          //å¼å§ä¸ä¼ (ç±»åï¼æ¹æ³)
          ready: null,
          //ä¸ä¼ æå(ç±»åï¼æ¹æ³ï¼è¿åç±»åï¼å¯¹è±¡)
          success: null,
          //å¤±è´¥(ç±»åï¼æ¹æ³)
          fail: null,
        },
        //å¯ä¸id(ç±»åï¼å­ç¬¦ä¸²ï¼å¦æä¸ºnullï¼åå¯ç¨ä¸´æ¶ä¸ä¼ ï¼è¯·è°¨æä½¿ç¨)
        Uid: null,
      };
      config = this.extend(config, options);
      const innerHtml = this.html();
      this.empty();
      this.get.insertAdjacentHTML(
        "afterbegin",
        `<label for="Pd_imgupload_${this.pid}" style="width:100%;height:100%;display:block;"></label>`
      );
      let uploadBtn = document.createElement("input"),
        userId,
        total = config.Max,
        current = 0,
        steps = (current / total) * 100;
      if (config.Uid) {
        userId = config.Uid;
      } else {
        userId = `${document.domain}_${this.pid}`;
      }

      uploadBtn.type = "file";
      uploadBtn.accept = `image/${config.Format}`;
      uploadBtn.id = `Pd_imgupload_${this.pid}`;
      if (config.type === "camera") uploadBtn.setAttribute("capture", "camera");
      uploadBtn.style.display = "none";
      if (config.Max > 1) uploadBtn.multiple = !0;
      this.get.querySelector("label").innerHTML = innerHtml;
      this.get.querySelector("label").append(uploadBtn);

      //ä¸ä¼ å¾ç
      const uploadPreview = (obj) => {
        let formData = new FormData();
        formData.append("images", obj);
        formData.append("uid", userId);
        formData.append("width", config.Clip.width);
        formData.append("height", config.Clip.height);
        formData.append("quality", config.Quality);

        if (config.Events.ready) {
          config.Events.ready();
        } else {
          !config.Events.ready && window.showLoading();
        }

        this.ajax({
          url: `${config.apiUrl}${config.apiName}`,
          async: !0,
          type: "post",
          dataType: "form",
          data: formData,
          success: (res) => {
            current++;
            steps = (current / total) * 100;
            uploadBtn.setAttribute("data-progress", steps);
            if (steps === 100) {
              uploadBtn.disabled = !1;
              let data = { src: res.images };
              uploadBtn.value = "";
              !config.Events.ready && window.hideLoading();
              config.Events.success && config.Events.success(data);
            }
          },
          error: () => {
            uploadBtn.disabled = !1;
            uploadBtn.value = "";
            !config.Events.ready && window.hideLoading();
            config.Events.fail && config.Events.fail();
          },
        });
      };

      //è·åéæ©æä»¶
      const selectedFile = (Files) => {
        let files = Array.prototype.slice.call(Files);
        if (config.Max === 0 || files.length <= config.Max) {
          current = 0;
          uploadBtn.disabled = !0;
          total = files.length;

          if (total > 0) {
            files.forEach((file, idx) => {
              uploadPreview(Files[idx]);
            });
          }
        } else {
          config.Events.overMax && config.Events.overMax();
          console.info(`æä»¶æ°éè¶è¿æå¤§æ°é:${config.Max}`);
        }
      };

      //éæ©æä»¶æé®äºä»¶
      uploadBtn.addEventListener("change", (event) => {
        event.preventDefault();
        selectedFile(event.target.files);
      });
      //æå¨æä»¶äºä»¶
      this.bind("dragover", (event) => {
        event.preventDefault();
      });
      this.bind("drop", (event) => {
        event.preventDefault();
        selectedFile(event.dataTransfer.files);
      });
      return this;
    }
    //å¾çç§»å¨ç¼©æ¾
    ImgTransit(options) {
      let config = {
        //æ¾ç¤ºæ§å¶å¾æ (ç±»åï¼å¸å°)
        icon: !0,
        //æ§å¶å¾æ å¤§å°(ç±»åï¼æ°å­)
        iconSize: 40,
        //æ¾ç¤ºè¾¹æ¡(ç±»åï¼å¸å°)
        border: !0,
        //åè¾¹è·(ç±»åï¼æ°å­)
        padding: 0,
        //ç¼©æ¾
        scale: {
          //æ¯å¦å¯ç¨(ç±»åï¼å¸å°)
          enable: !0,
          //æå°(ç±»åï¼æ°å­)
          min: 50,
          //æå¤§(ç±»åï¼æ°å­)
          max: 200,
          //éç(ç±»åï¼æ°å­)
          rate: 1,
        },
        //æ¯å¦ç§»å¨(ç±»åï¼å¸å°)
        move: !0,
        //æè½¬
        rotate: {
          //æ¯å¦å¯ç¨(ç±»åï¼å¸å°)
          enable: !0,
          //éç(ç±»åï¼æ°å­)
          rate: 1,
        },
        //æ¯å¦å¯ç¨å é¤(ç±»åï¼å¸å°)
        delete: !0,
        //è¾¹çéå¶(ç±»åï¼å¸å°)
        bounds: !0,
        //è¾¹çå¯è¶åºèå´(ç±»åï¼æ°å­)
        outBounds: 0,
        //æä½åè°æ¹æ³(ç±»åï¼æ¹æ³ï¼è¿åç±»åï¼å¯¹è±¡)
        callback: null,
      };
      config = this.extend(config, options);
      let imgRealArr = this.get.querySelectorAll("img"),
        beforImgArr = Array.prototype.slice.call(imgRealArr),
        imgArr = [],
        imgIndex = [],
        btnAnimation = "transition:opacity .2s ease-in",
        topIndex,
        canMove = !0;

      this.css({
        position: "relative",
      });

      beforImgArr.forEach((cur, idx) => {
        if (JSON.parse(cur.getAttribute("Pd-move"))) {
          imgIndex.push(idx);
          imgArr.push(cur);
        }
      });
      topIndex = imgArr.length;

      //å¾æ éç½®
      const iconStyle = (option) => {
        let posicfg = {
          top: null,
          left: null,
          right: null,
          bottom: null,
          name: null,
        };
        posicfg = this.extend(posicfg, option);
        return `<a class="Pd-ImgTransit-btn Pd-${posicfg.name}" style="width:${config.iconSize}px;height:${config.iconSize}px;background:#fff url('//b.pandorajs.com/Pandora/Pandora/src/${posicfg.name}.svg');background-position:center;background-repeat:no-repeat;background-size:65%;position:absolute;border-radius:50%;top:${posicfg.top}px;left:${posicfg.left}px;right:${posicfg.right}px;bottom:${posicfg.bottom}px;z-index:2;${btnAnimation}" href="javascript:void 0"></a>`;
      };

      const icon = {
        resize: iconStyle({
          left: `-${config.iconSize / 2}`,
          bottom: `-${config.iconSize / 2}`,
          name: "resize",
        }),
        rotate: iconStyle({
          right: `-${config.iconSize / 2}`,
          top: `-${config.iconSize / 2}`,
          name: "rotate",
        }),
        delete: iconStyle({
          left: `-${config.iconSize / 2}`,
          top: `-${config.iconSize / 2}`,
          name: "delete",
        }),
      };

      //å é¤åå§åç´ 
      const deletDefault = () => {
        let imgRealArr = this.get.querySelectorAll("img"),
          imgArr = Array.prototype.slice.call(imgRealArr);
        imgArr.forEach((cur, idx) => {
          let current = imgRealArr[idx];
          JSON.parse(current.getAttribute("Pd-move")) &&
            current.parentElement.removeChild(current);
        });
      };

      //è®¾ç½®åæ°
      const setConfig = (ele, eleconfig) => {
        for (let a of ele.querySelectorAll(".Pd-ImgTransit-btn"))
          a.style.transform = `scale(${1 / (eleconfig.scale / 100)}) rotate(${
            -1 * eleconfig.rotate
          }deg)`;
        return (ele.style.transform = `translate3d(${
          eleconfig.translate
        }) scale(${eleconfig.scale / 100}) rotate(${eleconfig.rotate}deg)`);
      };

      //è·åä¸­å¿
      const getCenterPoint = (ele) => {
        return {
          x: ele.getBoundingClientRect().left + ele.offsetWidth / 2,
          y: ele.getBoundingClientRect().top + ele.offsetHeight / 2,
        };
      };

      //æ·»å å®¹å¨äºä»¶
      const addEvent = (ele) => {
        let eleReal = this.get.querySelectorAll(`.Pd-ImgTransit`),
          eleArr = Array.prototype.slice.call(eleReal),
          eleConfig = [];

        eleArr.forEach((cur, idx) => {
          let w = ele[idx].width,
            h = ele[idx].height;
          eleConfig.push({ translate: `0,0,0`, scale: 100, rotate: 0 });
          eleReal[idx].style.width = `${w}px`;
          eleReal[idx].style.height = `${h}px`;
          setConfig(eleReal[idx], eleConfig[idx]);
          eleReal[idx].style.position = "absolute";
          eleReal[idx].style.top = "50%";
          eleReal[idx].style.left = "50%";
          eleReal[idx].style.margin = `-${h / 2 + config.padding}px 0 0 -${
            w / 2 + config.padding
          }px`;
          eleReal[idx].style.zIndex = idx + 1;
          eleReal[idx].style.padding = `${config.padding}px`;

          let touchStart,
            touchEnd,
            touchMove,
            touchResize,
            touchRotate,
            touchDelete,
            centerPoint,
            prevAngle,
            touchX = 0,
            touchY = 0,
            startX,
            startY,
            prevScale;

          touchStart = (event) => {
            event.preventDefault();
            if (
              JSON.parse(event.target.getAttribute("pd-move")) ||
              JSON.parse(event.target.parentElement.getAttribute("pd-move"))
            )
              eleReal[idx].querySelector("img").style.transform = "scale(1.04)";
            config.callback &&
              config.callback({
                type: "choose",
                obj: eleReal[idx],
              });
          };
          touchEnd = (event) => {
            event.preventDefault();
            eleReal[idx].querySelector("img").style.transform = "scale(1)";
          };
          //ç§»å¨äºä»¶
          touchMove = (event) => {
            if (event.touches.length < 2) {
              event.stopImmediatePropagation();
              event.preventDefault();
              const changePosition = () => {
                let nowx = event.changedTouches[0].pageX,
                  nowy = event.changedTouches[0].pageY,
                  w = event.target.getBoundingClientRect().width,
                  h = event.target.getBoundingClientRect().height,
                  icon = event.target.parentElement
                    .querySelectorAll(".Pd-ImgTransit-btn")[0]
                    .getBoundingClientRect(),
                  iconw = icon.width / 2;
                touchX = nowx - startX;
                touchY = nowy - startY;
                let getBounding = eleReal[
                    idx
                  ].parentElement.getBoundingClientRect(),
                  parentBox = {
                    width: config.bounds
                      ? getBounding.width + config.outBounds
                      : getBounding.width,
                    height: config.bounds
                      ? getBounding.height + config.outBounds
                      : getBounding.height,
                  };

                if (config.bounds) {
                  if (Math.abs(touchX) >= parentBox.width / 2 - w / 2 - iconw) {
                    if (touchX < 0) {
                      touchX = -1 * (parentBox.width / 2 - w / 2 - iconw);
                    } else {
                      touchX = parentBox.width / 2 - w / 2 - iconw;
                    }
                  }
                  if (
                    Math.abs(touchY) >=
                    parentBox.height / 2 - h / 2 - iconw
                  ) {
                    if (touchY < 0) {
                      touchY = -1 * (parentBox.height / 2 - h / 2 - iconw);
                    } else {
                      touchY = parentBox.height / 2 - h / 2 - iconw;
                    }
                  }
                }
                eleConfig[idx].translate = `${touchX}px,${touchY}px,0`;
                setConfig(eleReal[idx], eleConfig[idx]);
              };
              config.callback &&
                config.callback({ type: "move", obj: eleReal[idx] });
              canMove && changePosition();
            }
          };
          //ç¼©æ¾äºä»¶
          touchResize = (event) => {
            event.stopImmediatePropagation();
            event.preventDefault();
            if (canMove) {
              let x =
                event.changedTouches[0].pageX -
                eleReal[idx].getBoundingClientRect().left;
              if (x > 0 && eleConfig[idx].scale > config.scale.min) {
                eleConfig[idx].scale -= config.scale.rate;
              }
              if (x < 0 && eleConfig[idx].scale < config.scale.max) {
                eleConfig[idx].scale += config.scale.rate;
              }
            }

            if (event.touches.length >= 2) {
              if (config.scale.enable) {
                if (event.scale > prevScale) {
                  if (eleConfig[idx].scale < config.scale.max)
                    eleConfig[idx].scale += event.scale;
                } else {
                  if (eleConfig[idx].scale > config.scale.min)
                    eleConfig[idx].scale -= event.scale * 10;
                }
              }

              if (config.rotate.enable) {
                if (event.rotation > 0) {
                  eleConfig[idx].rotate += Math.abs(event.rotation) / 30;
                } else {
                  eleConfig[idx].rotate -= Math.abs(event.rotation) / 30;
                }
              }
            }
            setConfig(eleReal[idx], eleConfig[idx]);
            config.callback &&
              config.callback({ type: "resize", obj: eleReal[idx] });
          };
          //æè½¬äºä»¶
          touchRotate = (event) => {
            event.stopImmediatePropagation();
            event.preventDefault();
            const changeRotate = () => {
              let angle = Math.atan2(
                event.changedTouches[0].pageY - centerPoint.y,
                event.changedTouches[0].pageX - centerPoint.x
              );
              eleConfig[idx].rotate =
                Math.floor(((angle - prevAngle) * 180) / Math.PI) *
                config.rotate.rate;
              setConfig(eleReal[idx], eleConfig[idx]);
            };
            config.callback &&
              config.callback({ type: "rotate", obj: eleReal[idx] });
            canMove && changeRotate();
          };
          //å é¤äºä»¶
          touchDelete = (event) => {
            event.stopImmediatePropagation();
            event.preventDefault();
            const deleteObj = () => {
              eleConfig[idx].translate = "0,0,0";
              eleConfig[idx].rotate = 0;
              eleConfig[idx].scale = 100;
              setConfig(eleReal[idx], eleConfig[idx]);
              eleReal[idx].style.display = "none";
              config.callback &&
                config.callback({ type: "delete", obj: eleReal[idx] });
            };
            canMove && deleteObj();
          };
          //ç»å®æææä½
          eleReal[idx].addEventListener("touchstart", touchStart);
          eleReal[idx].addEventListener("touchend", touchEnd);
          if (config.move) {
            eleReal[idx].addEventListener("touchstart", (event) => {
              if (event.touches.length < 2) {
                startX = event.changedTouches[0].pageX - touchX;
                startY = event.changedTouches[0].pageY - touchY;
                eleReal[idx].addEventListener("touchmove", touchMove);
              }
            });
          }
          if (config.icon && config.scale.enable)
            eleReal[idx]
              .querySelectorAll(`.Pd-resize`)[0]
              .addEventListener("touchmove", touchResize);
          if (config.icon && config.rotate.enable) {
            eleReal[idx]
              .querySelectorAll(`.Pd-rotate`)[0]
              .addEventListener("touchstart", (event) => {
                centerPoint = getCenterPoint(eleReal[idx]);
                prevAngle =
                  Math.atan2(
                    event.changedTouches[0].pageY - centerPoint.y,
                    event.changedTouches[0].pageX - centerPoint.x
                  ) -
                  (eleConfig[idx].rotate * Math.PI) / 180;
              });
            eleReal[idx]
              .querySelectorAll(`.Pd-rotate`)[0]
              .addEventListener("touchmove", touchRotate);
          }
          if (config.icon && config.delete)
            eleReal[idx]
              .querySelectorAll(`.Pd-delete`)[0]
              .addEventListener("touchstart", touchDelete);

          //éèæä½æé®
          const hideBtn = () => {
            canMove = !1;
            let allCon = document.querySelectorAll(".Pd-ImgTransit"),
              allBtn = document.querySelectorAll(".Pd-ImgTransit-btn");
            for (let a of allCon) a.style.border = "none";
            for (let a of allBtn) a.style.opacity = 0;
          };
          config.icon && hideBtn();

          //æ¾ç¤ºæä½æé®
          const showBtn = (tag) => {
            canMove = !0;
            let curBtn = tag.querySelectorAll(".Pd-ImgTransit-btn");
            for (let a of curBtn) {
              a.style.opacity = 1;
              if (config.border) tag.style.border = "2px dashed white";
              topIndex++;
              tag.style.zIndex = topIndex;
            }
          };

          //æ¾ç¤ºå½åæé®
          document.addEventListener("touchstart", (event) => {
            if (config.icon) {
              hideBtn();
              event.stopImmediatePropagation();
              JSON.parse(event.target.getAttribute("pd-move")) &&
                showBtn(event.target);
              if (event.target.parentElement)
                JSON.parse(
                  event.target.parentElement.getAttribute("pd-move")
                ) && showBtn(event.target.parentElement);
            } else {
              if (event.target.parentElement) {
                if (
                  JSON.parse(event.target.parentElement.getAttribute("pd-move"))
                ) {
                  canMove = !0;
                } else {
                  canMove = !1;
                }
              }
            }
          });
        });
      };

      new Promise((next) => {
        let eleArr = [];
        imgArr.forEach((current, idx) => {
          let cur = imgRealArr[imgIndex[idx]],
            btn = "";
          if (config.icon) {
            config.scale.enable && (btn += icon.resize);
            config.rotate.enable && (btn += icon.rotate);
            config.delete && (btn += icon.delete);
          }
          this.append(
            `<div class="Pd-ImgTransit" Pd-index="${imgIndex[idx]}">${btn}</div>`
          );
          let imgCon = this.get.querySelectorAll(".Pd-ImgTransit")[idx];
          cur.style.transition = "transform .4s ease-in";
          [].slice.call(cur.attributes).forEach((atts) => {
            if (
              atts.name !== "style" &&
              atts.name !== "id" &&
              atts.name !== "class"
            )
              imgCon.setAttribute(atts.name, atts.value);
          });
          imgCon.appendChild(cur);
          cur.removeAttribute("Pd-move");
          eleArr.push(cur);
          next(eleArr);
        });
      }).then((ele) => {
        deletDefault();
        addEvent(ele);
      });
    }
    //å¾®ä¿¡SDK
    wxSDK(options) {
      let config = {
        //ç¸å³æ¥å£å°å(ç±»åï¼å­ç¬¦ä¸²)
        apiUrl: "//wx.pandorajs.com/wxshare.ashx?url=",
        //åäº«æ é¢(ç±»åï¼å­ç¬¦ä¸²ææ°ç»)
        title: ["Share to Timeline", "Share to Friends"],
        //åäº«æè¿°(ç±»åï¼å­ç¬¦ä¸²)
        desc: "Simple for this",
        //åäº«å¾(ç±»åï¼å­ç¬¦ä¸²ææ°ç»)
        sharepics: "//pandorajs.com/share_ico.jpg",
        //åäº«é¾æ¥(ç±»åï¼å­ç¬¦ä¸²ææ°ç»)
        sharelinks: location.href,
        //è°è¯(ç±»åï¼å¸å°)
        debug: !1,
        //å¾®ä¿¡jsApiList(ç±»åï¼æ°ç»)
        jsApiList: null,
        //åè°æ¹æ³
        callback: {
          //åäº«å°±ç»ª(ç±»åï¼æ¹æ³)
          ready: null,
          //åäº«æå(ç±»åï¼æ¹æ³)
          success: null,
          //åäº«å¤±è´¥æåæ¶(ç±»åï¼æ¹æ³)
          error: null,
        },
      };
      config = this.extend(config, options);
      let sdk = "//pandorajs.com/other/weixin.js";
      if (location.protocol === "file:")
        sdk = "//pandorajs.com/other/weixin.js";
      const scriptTag = document.createElement("script");
      scriptTag.id = "Pd_share";
      scriptTag.src = sdk;
      if (this.getEle("#Pd_share")) {
        new PandoraAPI("#Pd_share").remove();
        document.body.appendChild(scriptTag);
      } else {
        document.body.appendChild(scriptTag);
      }
      let jsApiList = [
        "onMenuShareTimeline",
        "onMenuShareAppMessage",
        "updateTimelineShareData",
        "updateAppMessageShareData",
      ];
      if (config.jsApiList) {
        config.jsApiList.map((e) => {
          jsApiList.push(e);
        });
      }

      const isObj = (con) => {
        if (typeof con === "object") {
          return !0;
        } else {
          return !1;
        }
      };

      const success = (res) => {
        const { debug, appId, timestamp, nonceStr, signature, jsApiList } = res;
        wx.config({ debug, appId, timestamp, nonceStr, signature, jsApiList });
        wx.ready(() => {
          new Promise((next) => {
            const timeLine = {
                title: isObj(config.title) ? config.title[0] : config.title,
                link: isObj(config.sharelinks)
                  ? config.sharelinks[0]
                  : config.sharelinks,
                imgUrl: isObj(config.sharepics)
                  ? config.sharepics[0]
                  : config.sharepics,
              },
              friend = {
                title: isObj(config.title) ? config.title[1] : config.title,
                link: isObj(config.sharelinks)
                  ? config.sharelinks[1]
                  : config.sharelinks,
                imgUrl: isObj(config.sharepics)
                  ? config.sharepics[1]
                  : config.sharepics,
              };

            if (wx.onMenuShareTimeline) {
              const { title, link, imgUrl } = timeLine;
              wx.onMenuShareTimeline({
                title,
                link,
                imgUrl,
                success: config.callback.success,
                cancel: config.callback.error,
              });
            } else {
              const { title, link, imgUrl } = timeLine;
              wx.updateTimelineShareData({
                title,
                link,
                imgUrl,
                success: config.callback.success,
                cancel: config.callback.error,
              });
            }

            if (wx.onMenuShareAppMessage) {
              const { title, link, imgUrl } = friend;
              wx.onMenuShareAppMessage({
                title,
                desc: config.desc,
                link,
                imgUrl,
                success: config.callback.success,
                cancel: config.callback.error,
              });
            } else {
              const { title, link, imgUrl } = friend;
              wx.updateAppMessageShareData({
                title,
                desc,
                link,
                imgUrl,
                success: config.callback.success,
                cancel: config.callback.error,
              });
            }
            next();
          }).then(config.callback.ready);
        });
      };

      scriptTag.onload = () => {
        this.fetch({
          url: `${config.apiUrl}${encodeURIComponent(location.href)}`,
          type: "post",
          success: success,
        });
      };
      return this;
    }
    //æå è½½
    LazyLoad(options) {
      let config = {
        //ç¼ºçå°ºå¯¸
        width: 100,
        height: 100,
      };
      config = this.extend(config, options);

      const imgArr = this.child("img").get;
      let cur = 0;
      let lazyArr = [];
      //éåææå¾ç
      for (let img of imgArr) {
        if (img.dataset.src) {
          img.width = config.width;
          img.height = config.height;
          lazyArr.push(img);
        }
      }

      //è¿å¥è§å¾
      const inView = (obj) => {
        if (obj.getBoundingClientRect().y - window.innerHeight < 0) return obj;
        return !1;
      };

      //æ£æµå¾çç¶æ
      const checker = () => {
        lazyArr.forEach((img) => {
          if (inView(img) && !img.src && img.complete) {
            img.src = inView(img).dataset.src;
            img.onload = () => {
              img.width = img.dataset.width
                ? img.dataset.width
                : img.naturalWidth;
              img.height = img.dataset.height
                ? img.dataset.height
                : img.naturalHeight;
              img.removeAttribute("data-src");
              img.dataset.width && img.removeAttribute("data-width");
              img.dataset.height && img.removeAttribute("data-height");
              cur++;
              if (cur == lazyArr.length)
                window.removeEventListener("scroll", checker);
            };

            img.onerror = () => {
              console.error(`ä»¥ä¸èµæºåçéè¯¯ï¼${img.src}`);
              cur++;
            };
          }
        });
      };

      //é¡µé¢æ»å¨äºä»¶
      window.addEventListener("scroll", checker);
    }
  };
};

const Pandora = class extends PandoraJs(PandoraAPI) {
  constructor(element) {
    super(element);
  }
};

window.Pandora = Pandora;
try {
  jQuery;
} catch (err) {
  window.$ = (element) => {
    return new Pandora(element);
  };
}


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(__dirname) {const path = __webpack_require__(83);

module.exports = {  
  watch: true,
  watchOptions: {
    poll: 1000, // æ¯ç§è¯¢é®å¤å°æ¬¡
    aggregateTimeout: 500, //é²æ å¤å°æ¯«ç§ååæ¬¡è§¦å
  },
  entry: path.resolve(__dirname, "Pandora.js"),
  output: {
    path: path.resolve(__dirname, ""),
    filename: "Pandora.min.js",
  },
};

/* WEBPACK VAR INJECTION */}.call(exports, "/"))

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(43);
__webpack_require__(80);
__webpack_require__(82);
__webpack_require__(79);
module.exports = __webpack_require__(3).Promise;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(81);
__webpack_require__(43);
module.exports = __webpack_require__(3).Symbol;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(0)('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(6)(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(10);
var toLength = __webpack_require__(40);
var toAbsoluteIndex = __webpack_require__(74);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(18);
var gOPS = __webpack_require__(37);
var pIE = __webpack_require__(27);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(16);
var call = __webpack_require__(58);
var isArrayIter = __webpack_require__(56);
var anObject = __webpack_require__(2);
var toLength = __webpack_require__(40);
var getIterFn = __webpack_require__(77);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(21)('native-function-to-string', Function.toString);


/***/ }),
/* 54 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(11);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(12);
var ITERATOR = __webpack_require__(0)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(11);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(2);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(35);
var descriptor = __webpack_require__(19);
var setToStringTag = __webpack_require__(20);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(6)(IteratorPrototype, __webpack_require__(0)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(0)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 61 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(14)('meta');
var isObject = __webpack_require__(7);
var has = __webpack_require__(5);
var setDesc = __webpack_require__(8).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(17)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1);
var macrotask = __webpack_require__(39).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(11)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8);
var anObject = __webpack_require__(2);
var getKeys = __webpack_require__(18);

module.exports = __webpack_require__(4) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(27);
var createDesc = __webpack_require__(19);
var toIObject = __webpack_require__(10);
var toPrimitive = __webpack_require__(30);
var has = __webpack_require__(5);
var IE8_DOM_DEFINE = __webpack_require__(32);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(4) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(10);
var gOPN = __webpack_require__(36).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(5);
var toObject = __webpack_require__(41);
var IE_PROTO = __webpack_require__(28)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 68 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(2);
var isObject = __webpack_require__(7);
var newPromiseCapability = __webpack_require__(34);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(9);
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(1);
var dP = __webpack_require__(8);
var DESCRIPTORS = __webpack_require__(4);
var SPECIES = __webpack_require__(0)('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(2);
var aFunction = __webpack_require__(15);
var SPECIES = __webpack_require__(0)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(29);
var defined = __webpack_require__(23);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(29);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1);
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(1);
var core = __webpack_require__(3);
var LIBRARY = __webpack_require__(13);
var wksExt = __webpack_require__(42);
var defineProperty = __webpack_require__(8).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(22);
var ITERATOR = __webpack_require__(0)('iterator');
var Iterators = __webpack_require__(12);
module.exports = __webpack_require__(3).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(48);
var step = __webpack_require__(61);
var Iterators = __webpack_require__(12);
var toIObject = __webpack_require__(10);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(33)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(13);
var global = __webpack_require__(1);
var ctx = __webpack_require__(16);
var classof = __webpack_require__(22);
var $export = __webpack_require__(26);
var isObject = __webpack_require__(7);
var aFunction = __webpack_require__(15);
var anInstance = __webpack_require__(49);
var forOf = __webpack_require__(52);
var speciesConstructor = __webpack_require__(72);
var task = __webpack_require__(39).set;
var microtask = __webpack_require__(63)();
var newPromiseCapabilityModule = __webpack_require__(34);
var perform = __webpack_require__(68);
var userAgent = __webpack_require__(75);
var promiseResolve = __webpack_require__(69);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(0)('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(70)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(20)($Promise, PROMISE);
__webpack_require__(71)(PROMISE);
Wrapper = __webpack_require__(3)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(60)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(73)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(33)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(1);
var has = __webpack_require__(5);
var DESCRIPTORS = __webpack_require__(4);
var $export = __webpack_require__(26);
var redefine = __webpack_require__(9);
var META = __webpack_require__(62).KEY;
var $fails = __webpack_require__(17);
var shared = __webpack_require__(21);
var setToStringTag = __webpack_require__(20);
var uid = __webpack_require__(14);
var wks = __webpack_require__(0);
var wksExt = __webpack_require__(42);
var wksDefine = __webpack_require__(76);
var enumKeys = __webpack_require__(51);
var isArray = __webpack_require__(57);
var anObject = __webpack_require__(2);
var isObject = __webpack_require__(7);
var toObject = __webpack_require__(41);
var toIObject = __webpack_require__(10);
var toPrimitive = __webpack_require__(30);
var createDesc = __webpack_require__(19);
var _create = __webpack_require__(35);
var gOPNExt = __webpack_require__(66);
var $GOPD = __webpack_require__(65);
var $GOPS = __webpack_require__(37);
var $DP = __webpack_require__(8);
var $keys = __webpack_require__(18);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(36).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(27).f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(13)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(6)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(78);
var getKeys = __webpack_require__(18);
var redefine = __webpack_require__(9);
var global = __webpack_require__(1);
var hide = __webpack_require__(6);
var Iterators = __webpack_require__(12);
var wks = __webpack_require__(0);
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(84)))

/***/ }),
/* 84 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function templatePolyfill() {
  if ('content' in document.createElement('template')) {
    return false;
  }

  var templates = document.getElementsByTagName('template');
  var plateLen = templates.length;  

  for (var x = 0; x < plateLen; ++x) {
    var template = templates[x];
    var content = template.childNodes;
    var fragment = document.createDocumentFragment();

    while (content[0]) {
      fragment.appendChild(content[0]);
    }

    template.content = fragment;
  }
}

module.exports = templatePolyfill;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(44);
module.exports = __webpack_require__(45);


/***/ })
/******/ ]);